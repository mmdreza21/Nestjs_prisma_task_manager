datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider     = "prisma-client-js"
  transactions = false
}

enum Role {
  AdminOfSite
  User
}

enum Status {
  Todo
  Doing
  ToReview
  Done
  Canceled
}

model User {
  id                      String    @id @default(auto()) @map("_id") @db.ObjectId
  role                    Role      @default(User)
  name                    String
  password                String
  email                   String    @unique
  isEmailVerified         Boolean   @default(false)
  emailVerificationToken  String?
  emailVerificationExpiry DateTime?
  emailOtp                String?
  emailOtpExpiry          DateTime?
  resetPassToken          String?
  dateOfToken             DateTime?
  createdAt               DateTime  @default(now()) @db.Date()
  updatedAt               DateTime  @updatedAt

  // Relations
  Task Task[]
  Note Note[]
}

model Task {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime? @default(now()) @db.Date()
  updatedAt DateTime  @updatedAt

  title    String
  desc     String
  status   Status
  priority Int       @default(0)
  doneAt   DateTime?

  User   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

model Note {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now()) @db.Date()
  updatedAt DateTime @updatedAt

  title   String
  content String

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}
